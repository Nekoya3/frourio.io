(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{111:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),p=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=p(n),d=a,m=u["".concat(i,".").concat(d)]||u[d]||b[d]||s;return n?r.a.createElement(m,o(o({ref:t},l),{},{components:n})):r.a.createElement(m,o({ref:t},l))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,i=new Array(s);i[0]=d;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var l=2;l<s;l++)i[l]=n[l];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},112:function(e,t,n){"use strict";function a(e){var t,n,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(r&&(r+=" "),r+=n);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}t.a=function(){for(var e,t,n=0,r="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(r&&(r+=" "),r+=t);return r}},113:function(e,t,n){"use strict";var a=n(0),r=n(114);t.a=function(){var e=Object(a.useContext)(r.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},114:function(e,t,n){"use strict";var a=n(0),r=Object(a.createContext)(void 0);t.a=r},115:function(e,t,n){"use strict";var a=n(0),r=n.n(a),s=n(113),i=n(112),o=n(47),c=n.n(o),l=37,p=39;t.a=function(e){var t=e.block,n=e.children,o=e.defaultValue,u=e.values,b=e.groupId,d=e.className,m=Object(s.a)(),f=m.tabGroupChoices,O=m.setTabGroupChoices,y=Object(a.useState)(o),v=y[0],j=y[1],g=Object(a.useState)(!1),k=g[0],h=g[1];if(null!=b){var T=f[b];null!=T&&T!==v&&u.some((function(e){return e.value===T}))&&j(T)}var x=function(e){j(e),null!=b&&O(b,e)},w=[],N=function(e){e.metaKey||e.altKey||e.ctrlKey||h(!0)},P=function(){h(!1)};return Object(a.useEffect)((function(){return window.addEventListener("keydown",N),window.addEventListener("mousedown",P),function(){window.removeEventListener("keydown",N),window.removeEventListener("mousedown",P)}}),[]),r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(i.a)("tabs",{"tabs--block":t},d)},u.map((function(e){var t=e.value,n=e.label;return r.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":v===t,className:Object(i.a)("tabs__item",c.a.tabItem,{"tabs__item--active":v===t}),style:k?{}:{outline:"none"},key:t,ref:function(e){return w.push(e)},onKeyDown:function(e){!function(e,t,n){switch(n.keyCode){case p:!function(e,t){var n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()}(e,t);break;case l:!function(e,t){var n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()}(e,t)}}(w,e.target,e),N(e)},onFocus:function(){return x(t)},onClick:function(){x(t),h(!1)},onPointerDown:function(){return h(!1)}},n)}))),r.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},a.Children.toArray(n).filter((function(e){return e.props.value===v}))[0]))}},116:function(e,t,n){"use strict";var a=n(0),r=n.n(a);t.a=function(e){return r.a.createElement("div",null,e.children)}},95:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return p})),n.d(t,"default",(function(){return b}));var a=n(2),r=n(6),s=(n(0),n(111)),i=n(115),o=n(116),c={id:"get-task-by-id",title:"GET - /tasks/{taskId}"},l={unversionedId:"controller/get-task-by-id",id:"controller/get-task-by-id",isDocsHomePage:!1,title:"GET - /tasks/{taskId}",description:'`ts title="server/types/index.ts"',source:"@site/docs/controller/get-task-by-id.mdx",slug:"/controller/get-task-by-id",permalink:"/docs/controller/get-task-by-id",editUrl:"https://github.com/frouriojs/frourio.io/edit/master/docs/controller/get-task-by-id.mdx",version:"current",sidebar:"someSidebar",previous:{title:"GET - /tasks?limit={number}",permalink:"/docs/controller/get-tasks"},next:{title:"POST - /tasks",permalink:"/docs/controller/post-tasks"}},p=[],u={rightToc:p};function b(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(s.b)("wrapper",Object(a.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(s.b)("br",null),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts",metastring:'title="server/types/index.ts"',title:'"server/types/index.ts"'}),"export type Task = {\n  id: number\n  label: string\n  done: boolean\n}\n")),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts",metastring:'title="server/api/tasks/_taskId@number/index.ts"',title:'"server/api/tasks/_taskId@number/index.ts"'}),"import { Task } from '$/types' // path alias $ -> server\n\nexport type Methods = {\n  get: {\n    resBody: Task\n  }\n}\n")),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts",metastring:'title="server/api/tasks/_taskId@number/controller.ts"',title:'"server/api/tasks/_taskId@number/controller.ts"'}),"import { defineController } from './$relay' // '$relay.ts' is automatically generated by frourio\nimport { findTask } from '$/service/tasks'\n\nexport default defineController(() => ({\n  get: async ({ params }) => {\n    const task = await findTask(params.taskId)\n\n    return task ? { status: 200, body: task } : { status: 404 }\n  }\n}))\n")),Object(s.b)(i.a,{defaultValue:"prisma",values:[{label:"Prisma",value:"prisma"},{label:"TypeORM",value:"typeorm"},{label:"None",value:"none"}],mdxType:"Tabs"},Object(s.b)(o.a,{value:"prisma",mdxType:"TabItem"},Object(s.b)("p",null,Object(s.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-schema"}),"Prisma schema")),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-text",metastring:'title="server/prisma/schema.prisma"',title:'"server/prisma/schema.prisma"'}),"model Task {\n  id    Int     @id @default(autoincrement())\n  label String\n  done  Boolean @default(false)\n}\n")),Object(s.b)("p",null,Object(s.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/crud#findone"}),"Prisma#findOne")),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts",metastring:'title="server/service/tasks.ts"',title:'"server/service/tasks.ts"'}),"import { PrismaClient } from '@prisma/client'\nimport { Task } from '$prisma/client' // path alias $prisma -> ./node_modules/.prisma/*\n\nconst prisma = new PrismaClient()\n\nexport const findTask = (id: Task['id']) => prisma.task.findOne({ where: { id }})\n"))),Object(s.b)(o.a,{value:"typeorm",mdxType:"TabItem"},Object(s.b)("p",null,Object(s.b)("a",Object(a.a)({parentName:"p"},{href:"https://typeorm.io/#/entities"}),"TypeORM entities")),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts",metastring:'title="server/entity/Task.ts"',title:'"server/entity/Task.ts"'}),"import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm'\n\n@Entity()\nexport class Task {\n  @PrimaryGeneratedColumn()\n  id: number\n\n  @Column({ length: 100 })\n  label: string\n\n  @Column({ default: false })\n  done: boolean\n}\n")),Object(s.b)("p",null,Object(s.b)("a",Object(a.a)({parentName:"p"},{href:"https://typeorm.io/#/find-options"}),"TypeORM#findOne")),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts",metastring:'title="server/service/tasks.ts"',title:'"server/service/tasks.ts"'}),"import { getRepository } from 'typeorm'\nimport { Task } from '$/entity/Task'\n\nconst taskRepository = () => getRepository(Task)\n\nexport const findTask = (id: Task['id']) => taskRepository().findOne(id)\n"))),Object(s.b)(o.a,{value:"none",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts",metastring:'title="server/service/tasks.ts"',title:'"server/service/tasks.ts"'}),"import fs from 'fs'\nimport { Task } from '$/types'\n\ntype DB = {\n  nextId: number\n  tasks: Task[]\n}\n\nconst dbPath = 'database.json'\n\nconst readDB = async (): Promise<DB> =>\n  JSON.parse(await fs.promises.readFile(dbPath, 'utf8'))\n\nif (!fs.existsSync(dbPath)) {\n  fs.writeFileSync(dbPath, JSON.stringify({ nextId: 0, tasks: [] }), 'utf8')\n}\n\nexport const findTask = async (id: Task['id']) => (await readDB()).tasks.find(task => task.id === id)\n")))),Object(s.b)(i.a,{defaultValue:"next",values:[{label:"Next.js",value:"next"},{label:"Nuxt.js",value:"nuxt"}],mdxType:"Tabs"},Object(s.b)(o.a,{value:"next",mdxType:"TabItem"},Object(s.b)("p",null,"Use ",Object(s.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/aspida/aspida"}),"aspida")," and ",Object(s.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/aspida/aspida/tree/master/packages/aspida-swr"}),"@aspida/swr")," for the frontend HTTP client.",Object(s.b)("br",{parentName:"p"}),"\n","(Frourio and aspida are maintained by the same developer)"),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts",metastring:'title="pages/index.tsx"',title:'"pages/index.tsx"'}),"import useAspidaSWR from '@aspida/swr'\nimport { apiClient } from '~/utils/apiClient'\n\nconst taskId = 1\nconst { data, error, mutate } = useAspidaSWR(apiClient.tasks._taskId(taskId))\n"))),Object(s.b)(o.a,{value:"nuxt",mdxType:"TabItem"},Object(s.b)("p",null,"Use ",Object(s.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/aspida/aspida"}),"aspida")," for the frontend HTTP client.",Object(s.b)("br",{parentName:"p"}),"\n","(Frourio and aspida are maintained by the same developer)"),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts",metastring:'title="pages/index.vue"',title:'"pages/index.vue"'}),"import Vue from 'vue'\n\nexport default Vue.extend({\n  async fetch() {\n    const taskId = 1\n    this.task = await this.$api.tasks._taskId(taskId).$get()\n  },\n})\n")))))}b.isMDXComponent=!0}}]);