(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{109:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return b}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=a.a.createContext({}),l=function(e){var t=a.a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=l(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(r),m=n,b=u["".concat(i,".").concat(m)]||u[m]||d[m]||o;return r?a.a.createElement(b,s(s({ref:t},p),{},{components:r})):a.a.createElement(b,s({ref:t},p))}));function b(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var p=2;p<o;p++)i[p]=r[p];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},80:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return s})),r.d(t,"rightToc",(function(){return c})),r.d(t,"default",(function(){return l}));var n=r(2),a=r(6),o=(r(0),r(109)),i={id:"path-parameter",title:"Path parameter"},s={unversionedId:"validation/path-parameter",id:"validation/path-parameter",isDocsHomePage:!1,title:"Path parameter",description:"Path parameter can be specified as string or number type after @.",source:"@site/docs/validation/path-parameter.md",slug:"/validation/path-parameter",permalink:"/docs/validation/path-parameter",editUrl:"https://github.com/frouriojs/frourio.io/edit/master/docs/validation/path-parameter.md",version:"current",sidebar:"someSidebar",previous:{title:"Additional request",permalink:"/docs/hooks/additional-request"},next:{title:"URL query",permalink:"/docs/validation/url-query"}},c=[],p={rightToc:c};function l(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},p,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Path parameter can be specified as string or number type after ",Object(o.b)("inlineCode",{parentName:"p"},"@"),".",Object(o.b)("br",{parentName:"p"}),"\n","(Default is string)",Object(o.b)("br",{parentName:"p"}),"\n","Path parameter of number is automatically validated."),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts",metastring:'title="server/api/tasks/_taskId@number/index.ts"',title:'"server/api/tasks/_taskId@number/index.ts"'}),"import { Task } from '$/types'\n\nexport type Methods = {\n  get: {\n    resBody: Task\n  }\n}\n")),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts",metastring:'title="server/api/tasks/_taskId@number/controller.ts"',title:'"server/api/tasks/_taskId@number/controller.ts"'}),"import { defineController } from './$relay'\nimport { findTask } from '$/service/tasks'\n\nexport default defineController(() => ({\n  get: async ({ params }) => {\n    const task = await findTask(params.taskId)\n\n    return task ? { status: 200, body: task } : { status: 404 }\n  }\n}))\n")),Object(o.b)("p",null,"Results"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-sh"}),'$ curl http://localhost:8080/api/tasks\n[{"id":0,"label":"sample task","done":false}]\n\n$ curl http://localhost:8080/api/tasks/0\n{"id":0,"label":"sample task","done":false}\n\n$ curl http://localhost:8080/api/tasks/1 -i\nHTTP/1.1 404 Not Found\n\n$ curl http://localhost:8080/api/tasks/abc -i\nHTTP/1.1 400 Bad Request\n')))}l.isMDXComponent=!0}}]);